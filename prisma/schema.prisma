// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  role       String // admin, teacher, parent
  is_google  Boolean  @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model teachers {
  id              Int       @id @default(autoincrement())
  user_id         Int
  name            String
  place_birth     String?
  date_time_birth DateTime?
  religion        String?
  education       String?
  job             String?
  address         String?
  phone           String?
}

model parents {
  id              Int       @id @default(autoincrement())
  user_id         Int
  name            String
  type            String // ayah, ibu, wali
  place_birth     String?
  date_time_birth DateTime?
  religion        String?
  education       String?
  job             String?
  address         String?
  phone           String?

  children children[]
}

model children {
  id                Int       @id @default(autoincrement())
  parent_id         Int
  full_name         String
  name              String
  gender            String
  place_birth       String?
  date_time_birth   DateTime?
  religion          String?
  count_of_siblings Int?
  risk_category     String? // rendah, sedang, tinggi (enum)
  // Riwayat hasil tes pendengaran. soal no 2 MCHAT
  hearing_test      String? // pendengaran dalam batas normal, pendenganran di bawah normal, hasil tidak menyakinkan atau tidak definitif

  parent              parents               @relation(fields: [parent_id], references: [id])
  // one to one birth_history
  birth_history       birth_history?
  // one to many child_health_status
  child_health_status child_health_status[]
  // one to many expert_examination
  // expert_examination  expert_examination[]
  // one to many recommendation
  // recommendation       recommendation[]
  // child_recommendation child_recommendation[]

  // many to many reccomendation
  child_recommendation     child_recommendation[]
  child_expert_examination child_expert_examination[]
}

// birth history harusnya many to many?
model birth_history {
  id          Int     @id @default(autoincrement())
  children_id Int     @unique
  type        String // sebelum kelahiran, saat kelahiran
  question    String
  answer      String?

  children children @relation(fields: [children_id], references: [id])
}

model health_status {
  id       Int    @id @default(autoincrement())
  type     String // keadaan kesehatan, perkembangan jasmani
  question String // pernah sakit keras? dll

  child_health_status child_health_status[]
}

// Keadaan kesehatan dan perkembangan jasmani
model child_health_status {
  id               Int           @id @default(autoincrement())
  children         children      @relation(fields: [children_id], references: [id])
  children_id      Int
  health_status    health_status @relation(fields: [health_status_id], references: [id])
  health_status_id Int
  answer           String?
}

// hasil pemeriksaan ahli, expert examination harusnya many to many?
model expert_examination {
  id                       Int                        @id @default(autoincrement())
  type                     String // Dokter Ahli Anak, Dokter Ahli Rehabilitasi, Psikolog, Therapist
  child_expert_examination child_expert_examination[]
}

model child_expert_examination {
  id                    Int                @id @default(autoincrement())
  children              children           @relation(fields: [children_id], references: [id])
  children_id           Int
  expert_examination    expert_examination @relation(fields: [expert_examination_id], references: [id])
  expert_examination_id Int
  result                String?
}

// rekomendasi
// ketika repetisi ada, maka durasi diubah menjadi jumlah hari
model recommendation {
  id            Int     @id @default(autoincrement())
  type          String // Standar, Durasi, Repetisi (Enum)
  title         String
  description   String
  icon          String?
  duration      Int?
  duration_type String? // detik, menit, jam, hari, minggu, bulan
  repetition    Int?
  risk_cateogry String? // rendah, sedang, tinggi (enum)

  // children             children               @relation(fields: [children_id], references: [id])
  // child_recommendation child_recommendation[]

  children child_recommendation[]
}

// tabel pivot rekomendasi dan anak
model child_recommendation {
  id                Int            @id @default(autoincrement())
  children          children       @relation(fields: [children_id], references: [id])
  children_id       Int
  recommendation    recommendation @relation(fields: [recommendation_id], references: [id])
  recommendation_id Int
}

// model assesment {
//   id         Int    @id @default(autoincrement())
//   children_id Int
//   number     Int
//   question_type String // awal, follow-up (enum)
//   assesment_type String // awal, follow-up (enum)
//   question   String

//   children children @relation(fields: [children_id], references: [id])
// }
